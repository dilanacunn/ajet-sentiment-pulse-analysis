# -*- coding: utf-8 -*-
"""Untitled28.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ka5VkJhQgzfXShR1fOxAuQzFSfWtcgJj
"""

# Gerekli kütüphaneler
!pip install transformers trnlp

import pandas as pd
from transformers import pipeline

# 1. Yorum verisini yükle
df = pd.read_excel('Ajet50yorum_biletcom.xlsx')

# 2. Kategori ve anahtar kelimeler
categories = {
    'Uçuş Arama Deneyimi': {
        'pozitif': ['kolay buldum', 'sorunsuz', 'hızlı', 'iyi', 'güzel'],
        'negatif': ['zor buldum', 'hatalı', 'bulamadım', 'zaman kaybı', 'sonuçsuz', 'uzun sürdü']
    },
    'Destinasyonlar': {
        'pozitif': ['geniş destinasyon', 'her yere', 'sefer yeterli', 'uygun rota'],
        'negatif': ['sınırlı destinasyon', 'eksik rota', 'uçuş yok', 'istediğim yere yok']
    },
    'Ödeme / Biletleme Deneyimi': {
        'pozitif': ['kolay ödeme', 'hızlı işlem', 'sorunsuz biletleme', 'başarılı'],
        'negatif': ['ödeme sorunu', 'bilet hatası', 'işlem yapılmadı', 'gecikti']
    },
    'Ücret Politikası': {
        'pozitif': ['uygun fiyat', 'hesaplı', 'avantajlı'],
        'negatif': ['pahalı', 'kazık', 'fazla ücret', 'gereksiz', 'para']
    },
    'Uçuş Deneyimi': {
        'pozitif': ['memnun', 'keyifli', 'rahat', 'iyi', 'sorunsuz', 'güler yüzlü', 'hızlı', 'başarılı'],
        'negatif': ['zarar', 'şikayet', 'sorun', 'gecikme', 'beklemeli', 'berbat', 'geç', 'telafi etmiyorlar', 'rahatsızım', 'muzdaribim']
    }
}

# 3. Yorumları kategoriye ayır
def categorize_comment(yorum):
    for category, keywords in categories.items():
        if any(keyword in yorum.lower() for keyword in keywords['pozitif'] + keywords['negatif']):
            return category
    return 'Diğer'

df['Kategori'] = df['Yorum'].apply(categorize_comment)

# 4. Anahtar kelimeye göre sentiment
def get_sentiment_keywords(yorum):
    for category, keywords in categories.items():
        if any(kw in yorum.lower() for kw in keywords['pozitif']):
            return 'Pozitif'
        if any(kw in yorum.lower() for kw in keywords['negatif']):
            return 'Negatif'
    return 'Nötr'

df['Sentiment'] = df['Yorum'].apply(get_sentiment_keywords)

# 5. BERT ile Türkçe sentiment analizi
nlp = pipeline("sentiment-analysis", model="dbmdz/bert-base-turkish-cased")

def bert_sentiment(yorum):
    result = nlp(yorum)[0]
    return result['label'], result['score']

df[['BERT Sentiment', 'BERT Sentiment Score']] = df['Yorum'].apply(lambda yorum: pd.Series(bert_sentiment(yorum)))

# 6. Sentiment puanı ata
def sentiment_score(sentiment):
    if sentiment == 'Pozitif':
        return 1
    elif sentiment == 'Negatif':
        return -1
    else:
        return 0

df['Sentiment Score'] = df['Sentiment'].apply(sentiment_score)

# 7. Kategorilere göre pulse skorlarını hesapla
pulse_scores = df.groupby('Kategori')['Sentiment Score'].sum()

# 8. Excel dosyasına yaz
pulse_scores.to_excel('pulse_skorlari.xlsx')

# 9. Özet göster
print("Kategorilere göre pulse skoru:")
print(pulse_scores)

print("\nDetaylı analiz tablosu:")
print(df[['Yorum', 'Kategori', 'Sentiment', 'Sentiment Score', 'BERT Sentiment', 'BERT Sentiment Score']])
